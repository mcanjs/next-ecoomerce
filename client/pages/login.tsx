import Head from 'next/head';
import Link from 'next/link';
import { useCallback, useState } from 'react';
import formik, { useFormik } from 'formik';
import * as yup from 'yup';
import useUser from '@/lib/useUser';
import { ILogin } from '@/interfaces/User';
import fetchJson from '@/utils/fetchJson';

const schema = yup.object().shape({
  email: yup.string().email().min(5).required('Email is a required field'),
  password: yup.string().min(3).required('Password is a required field')
});

export default function Login() {
  const [errorMsg, setErrorMsg] = useState('');
  const { mutateUser } = useUser({
    redirectTo: '/',
    redirectIfFound: true
  });

  const handleOnSubmit = async (values: ILogin) => {
    try {
      mutateUser(
        await fetchJson('/api/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(values)
        })
      );
    } catch (error: any) {
      setErrorMsg(error.data.message);
    }
  };

  const formik = useFormik({
    initialValues: {
      email: '',
      password: ''
    },
    validationSchema: schema,
    onSubmit: handleOnSubmit
  });

  const setInputValue = useCallback(
    (key: string, value: unknown) =>
      formik.setValues({
        ...formik.values,
        [key]: value
      }),
    [formik]
  );

  return (
    <>
      <Head>
        <title>Matter - Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="contain py-16">
        <div className="max-w-lg mx-auto shadow px-6 py-7 rounded overflow-hidden">
          <h2 className="text-2xl uppercase font-medium mb-1">Login</h2>
          <p className="text-gray-600 mb-6 text-sm">welcome back customer</p>
          <div className="my-4 text-error">{errorMsg}</div>
          <form autoComplete="off" onSubmit={formik.handleSubmit}>
            <div className="space-y-2">
              <div>
                <label
                  htmlFor="email"
                  className={`${
                    formik.errors.email ? 'text-error' : 'text-gray-600'
                  } mb-2 block`}
                >
                  Email address
                </label>
                <input
                  type="email"
                  name="email"
                  id="email"
                  className={`${
                    formik.errors.email ? 'border-error' : 'border-gray-300'
                  } block w-full border  px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400`}
                  placeholder="youremail.@domain.com"
                  onChange={e => setInputValue('email', e.target.value)}
                />
                {formik.errors.email && (
                  <small className="text-error">{formik.errors.email}</small>
                )}
              </div>
              <div>
                <label
                  htmlFor="email"
                  className={`${
                    formik.errors.password ? 'text-error' : 'text-gray-600'
                  } mb-2 block`}
                >
                  Password
                </label>
                <input
                  type="password"
                  name="password"
                  id="password"
                  className={`${
                    formik.errors.password ? 'border-error' : 'border-gray-300'
                  } block w-full border  px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400`}
                  placeholder="*******"
                  onChange={e => setInputValue('password', e.target.value)}
                />
                {formik.errors.password && (
                  <small className="text-error">{formik.errors.password}</small>
                )}
              </div>
            </div>
            <div className="flex items-center justify-between mt-6">
              <div className="flex items-center">
                <input
                  type="checkbox"
                  name="remember"
                  id="remember"
                  className="text-primary focus:ring-0 rounded-sm cursor-pointer"
                />
                <label
                  htmlFor="remember"
                  className="text-gray-600 ml-3 cursor-pointer"
                >
                  Remember me
                </label>
              </div>
              <a href="#" className="text-primary">
                Forgot password
              </a>
            </div>
            <div className="mt-4">
              <button
                type="submit"
                className="block w-full py-2 text-center text-white bg-primary border border-primary rounded hover:bg-transparent hover:text-primary transition uppercase font-roboto font-medium"
              >
                Login
              </button>
            </div>
          </form>

          <p className="mt-4 text-center text-gray-600">
            {`Don't have account?`}
            <Link href="/register" className="text-primary pl-1">
              Register now
            </Link>
          </p>
        </div>
      </div>
    </>
  );
}
